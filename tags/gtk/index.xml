<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gtk on &lt;stdin></title><link>https://stdin.top/tags/gtk/</link><description>Recent content in gtk on &lt;stdin></description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Sep 2021 23:16:02 +0000</lastBuildDate><atom:link href="https://stdin.top/tags/gtk/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started with GTK4 on Windows</title><link>https://stdin.top/posts/gtk4-on-windows/</link><pubDate>Sat, 04 Sep 2021 23:16:02 +0000</pubDate><guid>https://stdin.top/posts/gtk4-on-windows/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>This article guides how to set up and write applications with GTK4 on the windows operating system.&lt;/p>
&lt;h1 id="gtk">GTK&lt;/h1>
&lt;p>
&lt;img src="https://www.gtk.org/assets/img/logo-gtk-sm.png" alt="https://www.gtk.org/assets/img/logo-gtk-sm.png">
&lt;/p>
&lt;p>GTK (formerly GIMP ToolKit then GTK+) is a free and open-source cross-platform widget toolkit for creating graphical user interfaces (GUIs).&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/GTK#Windows">[wikipedia]&lt;/a> &lt;a href="https://gtk.org">[Official Website]&lt;/a>&lt;/p>
&lt;h1 id="setup">Setup&lt;/h1>
&lt;div class="notices info" >&lt;p>&lt;p>GTK can also be compiled with MSVC / Visual Studio. while compiling with MSVC makes it more compatible with the Visual Studio ecosystem, it limits the libraries we can include in our project. mixing MSYS2 and MSVC libraries cause problems.&lt;/p>
&lt;p>To compile with MSVC:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://download.gnome.org/sources/gtk/">Get the latest tarball&lt;/a>.&lt;/li>
&lt;li>Run the following Commands:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">meson setup -Dmedia-gstreamer=disabled -Dbuild-tests=disabled build
meson compile -C build
meson install -C build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Refer: &lt;a href="https://www.collabora.com/news-and-blog/blog/2021/03/18/build-and-run-gtk-4-applications-with-visual-studio/">Build and run GTK 4 applications with Visual Studio&lt;/a>&lt;/p>
&lt;/p>&lt;/div>
&lt;h3 id="msys2">MSYS2&lt;/h3>
&lt;p>&lt;strong>MSYS2&lt;/strong> is a collection of tools and libraries providing you with an easy-to-use environment for building, installing, and running native Windows software.&lt;/p>
&lt;ol>
&lt;li>Install the latest version MSYS2 &lt;a href="https://www.msys2.org/">from their website&lt;/a>.&lt;/li>
&lt;li>Navigate to &lt;code>C:\msys2\&lt;/code> and launch &lt;code>mingw64.exe&lt;/code>.&lt;/li>
&lt;li>to update available repositories and packages, run:
&lt;code>pacman -Syyu&lt;/code>&lt;/li>
&lt;li>install &lt;code>gtk4&lt;/code>, &lt;code>gcc&lt;/code> (&lt;code>llvm&lt;/code> should work too!), &lt;code>pkg-config&lt;/code>:
&lt;code>pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gtk4 mingw-w64-x86_64-pkg-config&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Now add Mingw64 directories to System Path so that windows can find them:
add the following to the system path:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">C:\\msys64\\mingw64\\include
C:\\msys64\\mingw64\\bin
C:\\msys64\\mingw64\\lib
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img src="https://stdin.top/images/9nD9ZCp.png" alt="/images/9nD9ZCp.png">
&lt;/p>
&lt;ol>
&lt;li>We also need to pass the output of &lt;code>pkg-config&lt;/code> to &lt;code>gcc&lt;/code> while compiling. firstly, open &lt;code>CMD&lt;/code> and get the output of &lt;code>pkg-config --cflags --libs gtk4&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>It will produce something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">-mfpmath=sse -msse -msse2 -pthread -mms-bitfields -IC:/msys64/mingw64/include/gtk-4.0 -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/pango-1.0 -IC:/msys64/mingw64/include/harfbuzz -IC:/msys64/mingw64/include/pango-1.0 -IC:/msys64/mingw64/include/fribidi -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/gdk-pixbuf-2.0 -IC:/msys64/mingw64/include/libpng16 -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/cairo -IC:/msys64/mingw64/include/lzo -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/freetype2 -IC:/msys64/mingw64/include/libpng16 -IC:/msys64/mingw64/include/harfbuzz -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/pixman-1 -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/graphene-1.0 -IC:/msys64/mingw64/lib/graphene-1.0/include -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include/glib-2.0 -IC:/msys64/mingw64/lib/glib-2.0/include -IC:/msys64/mingw64/include -LC:/msys64/mingw64/lib -lgtk-4 -lpangowin32-1.0 -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgdk_pixbuf-2.0 -lcairo-gobject -lcairo -lvulkan -lgraphene-1.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lintl
&lt;/code>&lt;/pre>&lt;/div>&lt;p>copy the output and add it as a System Variable (I saved it as &lt;code>GTK4-PKG-CONFIG&lt;/code>):&lt;/p>
&lt;p>
&lt;img src="https://stdin.top/images/oxcoJbA.png" alt="/images/oxcoJbA.png">
&lt;/p>
&lt;h3 id="visual-studio-code">Visual Studio Code&lt;/h3>
&lt;p>I prefer Visual studio code for all my coding tasks. You can get the latest version of Visual studio code &lt;a href="https://code.visualstudio.com/">from their website&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>Create a new folder and open it in VSCode.&lt;/li>
&lt;li>create a new file &lt;code>.vscode/c_cpp_properties.json&lt;/code> and put the following in it:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Win32&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;includePath&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;${workspaceFolder}\\**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;C:\\msys64\\mingw64\\include\\**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;C:\\msys64\\mingw64\\lib\\glib-2.0\\include&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;C:\\msys64\\mingw64\\lib\\graphene-1.0\\include&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>notice the &lt;code>C:\msys64\mingw64\include\**&lt;/code>, &lt;code>C:\msys64\mingw64\lib\glib-2.0\include&lt;/code> and &lt;code>C:\msys64\mingw64\lib\graphene-1.0\include&lt;/code>. these are the header files we need for auto complete suggestions which will make our life easier.&lt;/p>
&lt;ol start="3">
&lt;li>create a new file, &lt;code>hello_world.c&lt;/code> file, and paste the &lt;code>Hello World&lt;/code> C program from &lt;a href="https://gtk.org">GTK.org&lt;/a>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="c1">// Include gtk
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;gtk/gtk.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_activate&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GtkApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Create a new window
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_application_window_new&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// Create a new button
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_button_new_with_label&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">// When the button is clicked, close the window passed as an argument
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">g_signal_connect_swapped&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;clicked&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">G_CALLBACK&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">gtk_window_close&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_window_set_child&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WINDOW&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">button&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_window_present&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WINDOW&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Create a new application
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GtkApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_application_new&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.example.GtkApplication&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">G_APPLICATION_FLAGS_NONE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">g_signal_connect&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;activate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">G_CALLBACK&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">on_activate&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">g_application_run&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">G_APPLICATION&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Compile the program:
&lt;code>gcc hello_world.c -o hello_world.exe -mwindows %GTK4-PKG-CONFIG%&lt;/code>&lt;/li>
&lt;li>Run the program by clicking on generated &lt;code>.exe&lt;/code> file.&lt;/li>
&lt;/ol>
&lt;p>
&lt;img src="https://stdin.top/images/oHf7ZqG.png" alt="/images/oHf7ZqG.png">
&lt;/p>
&lt;div class="notices note" >&lt;p>&lt;p>If you are running Windows on a &lt;strong>virtual machine&lt;/strong> and facing any issues with rendering such as bulky black borders, use &lt;code>CAIRO&lt;/code> backend for now. support for VGPU (provided by the hypervisor) is very basic and unstable.&lt;/p>
&lt;p>&lt;code>$env:GSK_RENDERER = &amp;quot;CAIRO&amp;quot;&lt;/code>&lt;/p>
&lt;/p>&lt;/div>
&lt;h3 id="debugging">Debugging&lt;/h3>
&lt;p>Setting up debugging enviroment is quite easy. Defaults should just work fine as long as you select the correct compiler when prompted, I&amp;rsquo;ve added &lt;code>-mwindows&lt;/code> to compile flags for good measure.&lt;/p>
&lt;p>&lt;code>.vscode/launch.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gcc.exe - Build and debug active file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;cppdbg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${fileDirname}\\${fileBasenameNoExtension}.exe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;span class="nt">&amp;#34;stopAtEntry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cwd&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${fileDirname}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;environment&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;span class="nt">&amp;#34;externalConsole&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;MIMode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gdb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;miDebuggerPath&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C:\\msys64\\mingw64\\bin\\gdb.exe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;setupCommands&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Enable pretty-printing for gdb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;-enable-pretty-printing&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ignoreFailures&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;preLaunchTask&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C/C++: gcc.exe build active file&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>.vscode/tasks.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tasks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;cppbuild&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C/C++: gcc.exe build active file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;C:\\msys64\\mingw64\\bin\\gcc.exe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;-g&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;${file}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;-o&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;${fileDirname}\\${fileBasenameNoExtension}.exe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;-mwindows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;%GTK4-PKG-CONFIG%&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;options&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;cwd&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${fileDirname}&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;problemMatcher&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;$gcc&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;group&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;kind&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;build&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;isDefault&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;detail&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Task generated by Debugger.&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0.0&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add breakpoint wherever you wish and debug away!&lt;/p>
&lt;p>
&lt;img src="https://stdin.top/images/QVZD3Bq.png" alt="/images/QVZD3Bq.png">
&lt;/p>
&lt;h2 id="a-bit-complicated-example">A bit complicated example&amp;hellip;&lt;/h2>
&lt;p>Let&amp;rsquo;s make things a little complicated, suppose we want to make an application to show the current time using Win32 API, this is how it can be done:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;windows.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;gtk/gtk.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">get_current_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GtkButton&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">btn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GtkLabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="n">SYSTEMTIME&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Button Clicked!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">GetSystemTime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">st&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">GetLocalTime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;%02d:%02d:%02d %d/%d/%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wHour&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wMinute&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wSecond&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wDay&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wMonth&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">st&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">wYear&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_label_set_label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_activate&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GtkApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Create a new window
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_application_window_new&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">box&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_box_new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GTK_ORIENTATION_VERTICAL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_label_new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello GTK!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">GtkWidget&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">btn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_button_new_with_label&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Get Current Time&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_widget_set_margin_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WIDGET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btn&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_widget_set_margin_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WIDGET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btn&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">g_signal_connect_after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">btn&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;clicked&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GCallback&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">get_current_time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_box_append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GTK_BOX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">box&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_box_append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GTK_BOX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">box&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">btn&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_window_set_child&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WINDOW&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">box&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_window_present&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">GTK_WINDOW&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Create a new application
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">GtkApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gtk_application_new&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.example.GtkApplication&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">G_APPLICATION_FLAGS_NONE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">g_signal_connect&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;activate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">G_CALLBACK&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">on_activate&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">g_application_run&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">G_APPLICATION&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compile the program with:&lt;/p>
&lt;p>&lt;code>gcc whatismytime.c -o whatismytime -mwindows %GTK4-PKG-CONFIG%&lt;/code>&lt;/p>
&lt;p>
&lt;img src="https://stdin.top/images/YURHuEM.png" alt="/images/YURHuEM.png">
&lt;/p>
&lt;h3 id="meson-build-system">Meson Build System&lt;/h3>
&lt;p>&lt;a href="https://github.com/jkotra/WhatIsMyTime">Available on Github&lt;/a>.&lt;/p>
&lt;p>Meson is the official build system used by GNOME. I&amp;rsquo;ve taken the above example and made it into a Meson Project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">tree
├── meson.build
├── README.md
└── src
├── meson.build
└── whatismytime.c
1 directory, 4 files
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="notices info" >&lt;p>&lt;code>meson&lt;/code> uses &lt;code>ninja&lt;/code> to build/compile. get the latest &lt;code>ninja&lt;/code> from &lt;a href="https://github.com/ninja-build/ninja/releases">their Github page&lt;/a> and add the extracted directory to System Path.&lt;/p>&lt;/div>
&lt;p>to build:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">meson build
ninja -C build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and then navigate to &lt;code>build/src&lt;/code> and execute &lt;code>whatismytime.exe&lt;/code>&lt;/p></description></item><item><title>Porting (coinflip-gtk) to GTK4</title><link>https://stdin.top/posts/experience_porting_gtk4/</link><pubDate>Fri, 19 Feb 2021 19:50:28 +0530</pubDate><guid>https://stdin.top/posts/experience_porting_gtk4/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Recently, I decided to fix some lingering bugs in my toy project &lt;a href="https://github.com/jkotra/coinflip-gtk">coinflip-gtk&lt;/a> which I made a few months back to get a taste of GTK. this coincided with the release of GTK4(actually it released a few months earlier but it&amp;rsquo;s still was very new and very few apps are ported to GTK4 from GTK3). I&amp;rsquo;ve successfully ported my small toy example to gtk4. This blog summarizes my experiences.&lt;/p>
&lt;h2 id="ui">UI&lt;/h2>
&lt;p>The topic of whether to use RAD tool (Glade) or not is a hot debate in the Gnome community&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. I went with the suggestion that is given to all the beginners i.e use glade. It took a few days to get hold of it esp. the spacing mechanism, it&amp;rsquo;s not as user-friendly as Qt Creator AFAIR.&lt;/p>
&lt;p>It Turned out glade files are for the most part incompatible with GTK4 as-it-is. a renowned developer even made a blog post&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> about why glade is BAD and you should write XML by hand instead.&lt;/p>
&lt;p>Gtk developers provide a tool &lt;code>gtk4-builder-tool&lt;/code> that is intended to fix issues in &lt;code>.ui&lt;/code>/&lt;code>.glade&lt;/code> files.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Usage:
gtk-builder-tool [COMMAND] [OPTION…] FILE
Commands:
validate Validate the file
simplify Simplify the file
enumerate List all named objects
preview Preview the file
Simplify Options:
--replace Replace the file
--3to4 Convert from GTK 3 to GTK 4
Preview Options:
--id=ID Preview only the named object
--css=FILE Use style from CSS file
Perform various tasks on GtkBuilder .ui files.
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="notices note" >&lt;p>from my experience, converting/fixing glade files is hit or miss for unknown reasons. I&amp;rsquo;ve noticed that it tends to produce good results when there is only one window per file.&lt;/p>&lt;/div>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>The first obvious thing one would notice is that there is no &lt;code>gtk_builder_connect_signals()&lt;/code>. All signals are connected by default.&lt;/p>
&lt;p>another important thing to note is the introduction of &lt;code>GdkTexture&lt;/code> which replaces &lt;code>GdkPixbuf.&lt;/code> &lt;a href="https://blog.gtk.org/2018/03/16/textures-and-paintables/">this change is explained by devs on the Gtk blog.&lt;/a>&lt;/p>
&lt;p>this creates a problem with the current implementation of about dialog in my app . in GTK4, &lt;code>gtk_about_dialog_set_logo&lt;/code> takes &lt;code>GdkPaintable&lt;/code> as input. The correct way to set logo is as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c"> &lt;span class="n">GdkTexture&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">about_logo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">gdk_texture_new_from_resource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/com/github/jkotra/coinflip/images/com.github.jkotra.coinflip.svg&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">gtk_about_dialog_set_logo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">about&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GDK_PAINTABLE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">about_logo&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="result">Result&lt;/h2>
&lt;p>The porting explained here is &lt;a href="https://github.com/jkotra/coinflip-gtk">available on Github&lt;/a>. (&lt;code>gtk4-port&lt;/code> branch)&lt;/p>
&lt;p>
&lt;img src="https://stdin.top/images/NMJ7cge.png" alt="">
&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.reddit.com/r/GTK/comments/jyf5lm/glade_not_recommended/">https://www.reddit.com/r/GTK/comments/jyf5lm/glade_not_recommended/&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://blogs.gnome.org/christopherdavis/2020/11/19/glade-not-recommended/">https://blogs.gnome.org/christopherdavis/2020/11/19/glade-not-recommended/&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>