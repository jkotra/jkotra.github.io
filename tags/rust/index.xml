<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on &lt;stdin></title><link>https://stdin.top/tags/rust/</link><description>Recent content in Rust on &lt;stdin></description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Jan 2021 02:07:19 +0530</lastBuildDate><atom:link href="https://stdin.top/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>What changed in WPC 1.0? a lot.</title><link>https://stdin.top/posts/what-changed-in-wpc-1.0-a-lot/</link><pubDate>Thu, 14 Jan 2021 02:07:19 +0530</pubDate><guid>https://stdin.top/posts/what-changed-in-wpc-1.0-a-lot/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>&lt;code>WPC 1.0&lt;/code> has been released and with a whole set of new features and most importantly readable, refactored and &lt;em>saner&lt;/em> code which should make things easy for any hackers/tinkerers out there.&lt;/p>
&lt;p>Compared to a mid-release (&lt;code>0.5&lt;/code>) which up to that point is pretty much bug fixing there are some noticeable new features to end user that started in &lt;code>0.5&lt;/code> and finally stable in &lt;code>1.0&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>Asynchronous downloads.&lt;/li>
&lt;li>Asynchronous API calls to &lt;a href="https://reddit.com/">Reddit&lt;/a> and Bing.&lt;/li>
&lt;li>download wallpapers from any subreddit. (&lt;code>--reddit&lt;/code>)&lt;/li>
&lt;li>convert image to grayscale before setting it as wallpaper (&lt;code>--grayscale&lt;/code>)&lt;/li>
&lt;li>filter based on the age of the file. (&lt;code>--maxage&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h1 id="refactoring">Refactoring&lt;/h1>
&lt;p>This took the most time, even more so than any feature. my decision(obviously not well thought of ðŸ˜•) not to come up with a flexible design pattern at the start of the project led to this, something that looked worse than a script with hard interdependency. The refactoring is not necessary for working functionality but it&amp;rsquo;s of much significance if any more features are to be implemented(or removed) in the future.&lt;/p>
&lt;p>Much of &lt;code>main.rs&lt;/code> has been further cleaned. any new web plugins can be implemented in just a few lines of code as the process of downloading and saving the file(s) has been abstracted away to their respective files in the &lt;code>web&lt;/code> dir of the project.&lt;/p>
&lt;p>for example, in the previous versions, the &lt;code>main()&lt;/code> handled everything: the calls, parsing, downloading and it became a huge mess. with &lt;code>1.0&lt;/code> all of this has been abstracted into their respective file and &lt;code>main()&lt;/code> simply calls &lt;code>update()&lt;/code> on the struct, the arguments are all the same for all, &lt;code>savepath&lt;/code>, &lt;code>maxage&lt;/code>, and reference to &lt;code>WPCDebug&lt;/code> impl. which prints out messages if debug is enabled (&lt;code>-D&lt;/code>)&lt;/p>
&lt;p>an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rs" data-lang="rs">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Bing&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bing&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">savepath&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wpc_debug&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">WPCDebug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">await&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_list&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">misc&lt;/span>::&lt;span class="n">download_wallpapers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">savepath&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">wpc_debug&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="k">await&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file_list&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get_bing_wpod&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">await&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(a number too many to note down) small typos and bugs have been fixed to achieve what I believe is now feature complete. I don&amp;rsquo;t intend to do any radical/breaking changes, just enough bug fixes to keep it sweet, simple, and most importantly functional.&lt;/p>
&lt;p>a major reason for refactoring the code is also because of the prospect that web sources may die or change API among other zillion things that could go wrong when depending on 3rd party APIs. If I were to maintain this (i mostly use local images anyway), the Web API dependent code must be independent of the program itself to some degree and a clear distinction between OS API&amp;rsquo;s (the process of changing wallpaper for example, which is unlikely to change in future (hopefully ðŸ˜‰).&lt;/p>
&lt;div class="notices info" >&lt;p>Previous developments to WPC have been documented in &lt;a href="https://stdin.top/posts/wpc-overview">this&lt;/a> article.&lt;/p>&lt;/div></description></item><item><title>Overview of WPC: Writing a wallpaper changer in Rust</title><link>https://stdin.top/posts/wpc-overview/</link><pubDate>Fri, 13 Mar 2020 10:30:06 +0530</pubDate><guid>https://stdin.top/posts/wpc-overview/</guid><description>&lt;p>&lt;a href="https://travis-ci.org/jkotra/wpc">
&lt;img src="https://travis-ci.org/jkotra/wpc.svg?branch=master" alt="Build Status">
&lt;/a>
&lt;img src="https://img.shields.io/github/languages/code-size/jkotra/wpc" alt="">
&lt;/p>
&lt;p>WPC stands for &lt;strong>W&lt;/strong>all &lt;strong>P&lt;/strong>aper &lt;strong>C&lt;/strong>hanger&lt;/p>
&lt;p>&lt;a href="https://github.com/jkotra/wpc">Github&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;h3 id="09-07-2020">(09-07-2020)&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jkotra/wpc/releases/tag/0.5">WPC v0.5&lt;/a> is a major release. &lt;code>main.rs&lt;/code> is mostly rewritten.&lt;/li>
&lt;/ul>
&lt;h3 id="14-01-2021">(14-01-2021)&lt;/h3>
&lt;div class="notices warning" >&lt;p>&lt;p>&lt;code>WPC&lt;/code> gained partial &lt;code>async&lt;/code> support from &lt;code>0.7&lt;/code> and almost full &lt;code>async&lt;/code> (except for &lt;code>wallhaven_api&lt;/code>) from &lt;code>1.0&lt;/code> on wards. &lt;strong>some parts of this article may not be relevant anymore&lt;/strong>, but may still be useful. I&amp;rsquo;ve written a short &lt;a href="https://stdin.top/posts/what-changed-in-wpc-1.0-a-lot/">&amp;ldquo;What changed in 1.0? a lot!&amp;quot;&lt;/a> to provide a general change log and overview of the project.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jkotra/wpc/tree/0.1.4">this tag&lt;/a> might be the last tree where this article is 100% relevant.&lt;/li>
&lt;/ul>
&lt;/p>&lt;/div>
&lt;hr>
&lt;h3 id="why">Why?&lt;/h3>
&lt;p>I have a dual boot setup (Arch Linux/Windows 10) and I use Gnome DE in my arch Linux which lacks automatic wallpaper changing functionality.&lt;/p>
&lt;p>Even in the case of windows 10, While there is a &lt;em>Slideshow&lt;/em> of wallpapers, it does not have an option like interval or web source.&lt;/p>
&lt;p>both of these reasons led me to develop my own application. I want it to be simple, fast and reliable so I chose Rust.&lt;/p>
&lt;h3 id="how">How?&lt;/h3>
&lt;p>WPC is written in rust with a modular design in mind.&lt;/p>
&lt;p>APIs are divided into modules and used in main.rs as required based on the platform.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">.
â”œâ”€â”€ Cargo.lock
â”œâ”€â”€ Cargo.toml
â”œâ”€â”€ LICENSE.md
â”œâ”€â”€ README.md
â””â”€â”€ src
â”œâ”€â”€ changer
â”‚Â Â  â”œâ”€â”€ linux
â”‚Â Â  â”‚Â Â  â””â”€â”€ DE
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ gnome.rs
â”‚Â Â  â”‚Â Â  â””â”€â”€ startup.rs
â”‚Â Â  â””â”€â”€ windows
â”‚Â Â  â””â”€â”€ windows.rs
â”œâ”€â”€ cli.yml
â”œâ”€â”€ main.rs
â”œâ”€â”€ misc.rs
â””â”€â”€ web
â”œâ”€â”€ bing_wpod.rs
â””â”€â”€ wallheaven_api.rs
6 directories, 12 files
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dependencies">Dependencies&lt;/h3>
&lt;p>&lt;code>config.toml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">package&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;wpc&amp;#34;&lt;/span>
&lt;span class="nx">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.1.1&amp;#34;&lt;/span>
&lt;span class="nx">authors&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Jagadeesh Kotra &amp;lt;jagadeesh@stdin.top&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">edition&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;2018&amp;#34;&lt;/span>
&lt;span class="c"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">serde&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;1.0.104&amp;#34;&lt;/span>
&lt;span class="nx">serde_json&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;1.0.48&amp;#34;&lt;/span>
&lt;span class="nx">reqwest&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.10&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">features&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;blocking&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;json&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">clap&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;2.33&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">features&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;yaml&amp;#34;&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;span class="nx">rand&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.7&amp;#34;&lt;/span>
&lt;span class="nx">chrono&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.4.10&amp;#34;&lt;/span>
&lt;span class="nx">enquote&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;1.0.3&amp;#34;&lt;/span>
&lt;span class="nx">dirs&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;2.0.2&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="s1">&amp;#39;cfg(windows)&amp;#39;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">winapi&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">features&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;winuser&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some notes,&lt;/p>
&lt;p>&lt;code>serde&lt;/code> and &lt;code>serde_json&lt;/code> is used to deal with JSON data.&lt;/p>
&lt;p>&lt;code>reqwest&lt;/code> is the used to parse information from web sources.&lt;/p>
&lt;p>&lt;code>winapi&lt;/code> provides access to Windows API&lt;/p>
&lt;hr>
&lt;h3 id="wallheaven-api">Wallheaven API&lt;/h3>
&lt;p>One of the main features of WPC is its ability to parse wallpapers from the web. Namely, &lt;a href="https://wallhaven.cc/">Wallheaven&lt;/a> and Bing WPOD are implemented.&lt;/p>
&lt;p>&lt;a href="https://wallhaven.cc/help/api">wallheaven API&lt;/a> is implemented in Rust
It uses &lt;code>reqwest::blocking&lt;/code> to make GET requests and convert them to JSON.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_wallpaperinfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">apikey&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">serde_json&lt;/span>::&lt;span class="n">value&lt;/span>::&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">apikey&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">query&lt;/span>: &lt;span class="nc">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_taginfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_usersettings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">apikey&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_getid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">apikey&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">serde_json&lt;/span>::&lt;span class="n">value&lt;/span>::&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_getcoll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">collid&lt;/span>: &lt;span class="kt">i64&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">serde_json&lt;/span>::&lt;span class="n">value&lt;/span>::&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://github.com/jkotra/wpc/blob/master/src/web/wallheaven_api.rs">wallhaven.rs&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="bing-api">Bing API&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get_wallpaper_of_the_day&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">serde_json&lt;/span>::&lt;span class="n">value&lt;/span>::&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">dyn&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">error&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">resp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reqwest&lt;/span>::&lt;span class="n">blocking&lt;/span>::&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://www.bing.com/HPImageArchive.aspx?format=js&amp;amp;idx=0&amp;amp;n=1&amp;amp;mkt=en-US&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Unable to make GET request!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>: &lt;span class="nc">Value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">serde_json&lt;/span>::&lt;span class="n">from_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">resp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot Decode JSON Data!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output: &lt;code>JSON&lt;/code>&lt;/p>
&lt;hr>
&lt;h3 id="tests">Tests&lt;/h3>
&lt;div class="notices warning" >&lt;p>Network Connectivity is required for the following tests:
&lt;br>
&lt;code>fn bing_test_is_jpg()&lt;/code>
&lt;br>
&lt;code>fn bing_test_is_downloadable()&lt;/code>
&lt;br>
&lt;code>fn wallheaven_get_wallpapers()&lt;/code>
&lt;br>&lt;/p>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">it_works&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">assert_eq!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">bing_test_is_jpg&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">bing_test_is_downloadable&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">wallheaven_get_wallpapers&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Creating this application has been a great journey. PR/Issues are welcome.&lt;/p>
&lt;p>&lt;a href="https://github.com/jkotra/wpc">Github&lt;/a>&lt;/p></description></item></channel></rss>